# false, true | false
#debug: false
# default: info, info | debug | error
LOGGER_LEVEL: info
#NO_COLOR:
#ADMIN_SECRET_KEY:
# default: secret
SECRET_KEY:
# default: 5000
PORT: 5000

app:
  # default: admin@example.com
  sys_admin_email:
  # 为空时生成随机密码
  sys_admin_password:
  # default: 500
  batch_size:
  fix_tz:
  # --- default assets endpoint
  assets_endpoint:
  assets_internal_endpoint:
  # default: http://127.0.0.1:5000
  master_address: http://127.0.0.1:5000
  # default: 20mb ; post json 的 body 大小
  payload_limit: 200mb

features:
  # 是否开启审计模式
  audit_enable: false
  # ; endpoint is /swagger
  swagger_enable: false
  cron_enable: true

tracing:
  enabled: false
  service_name: my-service
  endpoint: http://localhost:14268/api/traces

uploader:
  enable: true
  max_count: 10
  resource_path: /uploads

graphql:
  # default: false
  debug: false
  # default: false
  playground_enable: false

# -- sms --
sms:
  enable: false
  fake_mode: false
  provider: aliyun
  extra: |
    {
      "SignName": "xxx", //
      "RegionId": "xxx"
    }
  verify_code_checks:
    force_all: true
    locations:
      payment_order: false

# -- sentry --
sentry:
  enable:
  dsn:

# --- mq ---
mq:
  # default: false
  enable: false
  # default: amqp://localhost ; 存在 url 时忽略其他参数
  url: amqp://localhost
  #host: localhost
  #port: 5672
  #password:
  #username:

# --- redis ---
redis:
  enable: false
  host: localhost
  port: 6379
  # (Optional)
  password:
  # default: 0
  db: 0
  # other modules used
  # default: 1
  ws_redis_db: 1
  # default: 2
  job_redis_db: 2

  # redis 部分支持设置前缀来定义多个数据源
  #PREFIX_REDIS_ENABLE: false
  #PREFIX_REDIS_HOST: localhost
  #PREFIX_REDIS_PORT: 6379
  #PREFIX_REDIS_PASSWORD:
  #PREFIX_REDIS_DB:

# --- mysql ---
db: # TODO
  # default: mysql57 ; mysql56 | mysql57 | postgres
  DB_TYPE:
  TYPEORM_SYNCHRONIZE: false
  #TYPEORM_DEBUG: true
  # error | true
  TYPEORM_LOGGING: error
  # https://github.com/typeorm/typeorm/blob/master/docs/logging.md
  # advanced-console | simple-console | file | debug
  TYPEORM_LOGGER: advanced-console

  TYPEORM_CONNECTION: mysql
  TYPEORM_HOST:
  #TYPEORM_PORT:
  TYPEORM_DATABASE: db_name
  TYPEORM_USERNAME:
  TYPEORM_PASSWORD:

  # --- db-cache ---
  #TYPEORM_CACHE_ALWAYS_ENABLED: true
  # type: database
  #TYPEORM_CACHE: database
  #TYPEORM_TABLE_NAME: query-result-cache
  # type: redis
  #TYPEORM_CACHE: redis
  #TYPEORM_CACHE_OPTIONS: {"host": "redis", "db": 0}
  #TYPEORM_CACHE_DURATION: 60000
  # type: ioredis/cluster
  #TYPEORM_CACHE: ioredis/cluster

# --- qiniu storage config ---
#DEFAULT_STORAGE: qiniu
#QINIU_ACCESS_KEY: **********
#QINIU_SECRET_KEY: **********
#QINIU_BUCKET_NAME: test-bucket
#QINIU_PREFIX: /uploads/images
#QINIU_DOMAIN: http://www.example.com

#IMAGES|VIDEOS|FILES|[ANY]_STORAGE: qiniu
#IMAGES|VIDEOS|FILES|[ANY]_QINIU_ACCESS_KEY: **********
#IMAGES|VIDEOS|FILES|[ANY]_QINIU_SECRET_KEY: **********
#IMAGES|VIDEOS|FILES|[ANY]_QINIU_BUCKET_NAME: test-bucket
#IMAGES|VIDEOS|FILES|[ANY]_QINIU_PREFIX: /uploads/images
#IMAGES|VIDEOS|FILES|[ANY]_QINIU_DOMAIN: https://www.example.com

# --- local storage config ---
#IMAGES|VIDEOS|FILES|CHUNKS_STORAGE: local|minio|qiniu

storage: # TODO
  default_storage: local
  #IMAGES|[ANY]_STORAGE
  #VIDEOS|[ANY]_STORAGE:
  #FILES|[ANY]_STORAGE:
  #CHUNKS|[ANY]_STORAGE:
  minio:
    # --- minio storage config ---
    # true or false
    enable: false
    # minio.domain.io
    #endpoint:
    # 9000
    port: 9000
    # true or false
    use_ssl: false
    #access_key:
    #secret_key:

# --- mail ---
email:
  enable: false
  host:
  port: 465
  ssl: false
  username:
  password:
  from:
# --------------------------------------------------------------
# Customize
# --------------------------------------------------------------

