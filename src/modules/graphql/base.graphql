scalar Date
scalar JSON
scalar JsonObject
scalar JsonArray
scalar Any

enum Order {
  ASC
  DESC
}

enum DefaultOrderBy {
  createdAt_ASC
  createdAt_DESC
}

input Sorter {
  column: String!
  order: Order = ASC
}

input PageRequest {
  page: Int = 0
  size: Int = 10
  orderBy: Sorter
}

input TimeCondition {
  column: String!
  before: Date
  after: Date
}

input QueryCondition {
  ids: [Any!]
  random: Int
}

input CommonCondition {
  category: String
}

interface BaseEntity {
  id: Int!
  createdAt: Date!
  updatedAt: Date!
}

interface BaseNameEntity {
  id: Int!
  createdAt: Date!
  updatedAt: Date!

  name: String!
  description: String
}

interface PagedQuery {
  total: Int
  page: Int
  size: Int
}

interface PagedInfoQuery {
  pageInfo: PageInfo
  total: Int
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean
}

interface CursoredQuery {
  totalCount: Int
  pageInfo: PageInfo
}
